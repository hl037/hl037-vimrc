extends css, javascript

priority -1

snippet <button "button" i
<button ${2:id="$3"} type="${1:button}">$0</button>
endsnippet

snippet <label "label" i
<label for="$1">$0</label>
endsnippet

snippet <input "input" i
<input ${1:id="${2:text}"} type="$1" />$0
endsnippet

snippet button "button" w
button[type=${1:button}]$0
endsnippet

snippet label "label" w
label[for=$1]$0
endsnippet

snippet label_ "label" w
label[for=$1]{$2}+$0#$1
endsnippet

snippet input "input" w
input[type=${1:text}]$0
endsnippet

snippet <texta "textarea" i
<textarea ${1:id="$2"}>$0</textarea>
endsnippet

snippet br "br" w
<br/>
endsnippet

snippet c "class" w
class="$1"
endsnippet

snippet /\.([_A-Za-z0-9-]+)/ "class (2)" rw
`!p
if snip.store.tmp['todo', True]:
	snip.store.tmp.todo = False
	import vim
	import re
	nc = match[0].split('.')[1:]

	l = vim.current.line
	m = re.search(r'class\s*=\s*"([ _A-Za-z0-9-]*)"', l)
	if not m:
		start, end = match.span()
		end = start # Ultisnips remove what triggered the themplate first
	else:
		start, end = m.span()
		nc = m[1].split() + nc
	add = f'class="{" ".join(nc)}"'
#	r, c = vim.current.window.cursor
	vim.current.line = l[:start] + add + l[end:]
#	snip.store.tmp.cursor = (r, c)
#vim.current.window.cursor = snip.store.tmp.cursor
`
endsnippet

snippet /\#([_A-Za-z0-9-]+)/ "id (2)" rw
`!p
if snip.store.tmp['todo', True]:
	snip.store.tmp.todo = False
	import vim
	import re
	nc = match[0].split('#')[1:]

	l = vim.current.line
	m = re.search(r'id\s*=\s*"([ _A-Za-z0-9-]*)"', l)
	if not m:
		start, end = match.span()
		end = start # Ultisnips remove what triggered the themplate first
	else:
		start, end = m.span()
		nc = m[1].split() + nc
	add = f'id="{" ".join(nc)}"'
#	raise RuntimeError(f'{l=} {l[:start]=} {add=} {l[end:]=}')
#	r, c = vim.current.window.cursor
	vim.current.line = l[:start] + add + l[end:]
#	snip.store.tmp.cursor = (r, c)
#vim.current.window.cursor = snip.store.tmp.cursor
`
endsnippet

snippet i "id" w
id="$1"
endsnippet

snippet n "name" w
name="$1"
endsnippet

snippet f "for" w
for="$1"
endsnippet

snippet r "for" w
rows="$1"
endsnippet

snippet co "for" w
cols="$1"
endsnippet

snippet = "attr" i
="$1"
endsnippet
